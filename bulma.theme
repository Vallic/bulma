<?php

/**
 * @file
 * The primary PHP file for the Drupal Bulma base theme.
 */

use Drupal\block\Entity\Block;

/**
 * Implements template_preprocess_page().
 */
function bulma_preprocess_page(&$variables) {

  // Site slogan as separate variable.
  $site_config = \Drupal::config('system.site');
  $variables['site_slogan'] = $site_config->get('slogan');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function bulma_form_search_form_alter(&$form, $form_state, $form_id) {

  // Remove label.
  $form['basic']['keys']['#title_display'] = 'invisible';

  // Update the placeholder.
  $form['basic']['keys']['#placeholder'] = t('Enter your keywords');

  // Wrap class to combine form.
  $form['basic']['#attributes']['class'] = 'field has-addons';

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function bulma_form_search_block_form_alter(&$form, $form_state, $form_id) {

  // Update the placeholder, remove title - prevent double icon.
  $form['keys']['#title'] = '';
  $form['keys']['#placeholder'] = t('Search');

}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function bulma_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#form_id'] === 'search_block_form') {
    $suggestions[] = 'form__search_block_form';
  }
}

/**
 * Implements template_preprocess_block().
 */
function bulma_preprocess_block(&$variables) {
  // Set a region variable for use in templates.
  if (isset($variables['elements']['#id'])) {
    $block = Block::load($variables['elements']['#id']);
    $variables['region'] = $block->getRegion();
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function bulma_theme_suggestions_links_alter(array &$suggestions, array $variables) {
  $link_type = $variables['theme_hook_original'];

  // We want only affect node and comment links.
  $target_output = ['links__node', 'links__comment'];

  if (in_array($link_type, $target_output)) {
    $suggestions[] = 'links__bulma';
  }

}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function bulma_theme_suggestions_input_alter(array &$suggestions, array $variables) {

  // Define defaults for exclusion for rendering as bulma input.
  $exclude_input = [
    'hidden',
    'token',
    'radio',
    'checkbox',
    'submit',
    'image_button',
  ];

  // Submit button needs have render as button element.
  if ($variables['element']['#type'] == 'submit') {
    $suggestions[] = 'input__button__bulma';
  }

  // Add theme suggestions for others input elements.
  if (!in_array($variables['element']['#type'], $exclude_input)) {

    // Default wrapped input.
    $suggestions[] = 'input__bulma';
  }

}
